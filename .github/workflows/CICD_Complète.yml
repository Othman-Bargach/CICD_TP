name : CICD Complète

on:
  workflow_dispatch:     # Permet le déclenchement manuel dans GitHub

jobs:
  terraform:
    name: Provisionnement de l'infrastructure avec Terraform
    runs-on: ubuntu-latest

    env:
      TF_INPUT: false
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Clone le dépôt sur le runner Ubuntu de Github Actions pour accéder aux fichiers Terraform
      - name: Checkout code
        uses: actions/checkout@v4

      # Installe Terraform sur le runner Ubuntu de Github Actions
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-aws-instance

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform-aws-instance

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-aws-instance

      # Enregistre l'adresse IP publique de l'instance EC2 créée par Terraform dans un fichier texte
      - name: Save public IP output
        run: |
          terraform output -raw public_ip > public_ip.txt
        working-directory: ./terraform-aws-instance

      # Upload l'adresse IP publique dans les artifacts du workflow pour qu'elle puisse être utilisée par d'autres jobs ou workflows
      - name: Upload public IP artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-ip
          path: ./terraform-aws-instance/public_ip.txt

  ansible:
    name : Configuration EC2 avec Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible
        run: pip install ansible

      # Télécharge l'adresse IP publique de l'instance EC2 créée par Terraform depuis les artifacts du workflow précédent
      - name: Download public IP artifact
        uses: actions/download-artifact@v4
        with:
          name: public-ip

      # Lit l'adresse IP publique depuis le fichier texte téléchargé
      - name: Show public IP
        run: cat public_ip.txt

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        run: |
          ANSIBLE_HOST=$(cat public_ip.txt)
          ansible-playbook -i "$ANSIBLE_HOST," ansible/playbook.yml --private-key $SSH_AUTH_SOCK -u ubuntu